/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root";
import { Route as AnasayfaRouteImport } from "./routes/anasayfa";
import { Route as CmmRouteImport } from "./routes/cmm";
import { Route as Elektriksel_testRouteImport } from "./routes/elektriksel_test";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as SignupRouteImport } from "./routes/signup";

const SignupRoute = SignupRouteImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => rootRouteImport,
} as any);
const Elektriksel_testRoute = Elektriksel_testRouteImport.update({
  id: "/elektriksel_test",
  path: "/elektriksel_test",
  getParentRoute: () => rootRouteImport,
} as any);
const CmmRoute = CmmRouteImport.update({
  id: "/cmm",
  path: "/cmm",
  getParentRoute: () => rootRouteImport,
} as any);
const AnasayfaRoute = AnasayfaRouteImport.update({
  id: "/anasayfa",
  path: "/anasayfa",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/anasayfa": typeof AnasayfaRoute;
  "/cmm": typeof CmmRoute;
  "/elektriksel_test": typeof Elektriksel_testRoute;
  "/signup": typeof SignupRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/anasayfa": typeof AnasayfaRoute;
  "/cmm": typeof CmmRoute;
  "/elektriksel_test": typeof Elektriksel_testRoute;
  "/signup": typeof SignupRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/anasayfa": typeof AnasayfaRoute;
  "/cmm": typeof CmmRoute;
  "/elektriksel_test": typeof Elektriksel_testRoute;
  "/signup": typeof SignupRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/anasayfa" | "/cmm" | "/elektriksel_test" | "/signup";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/anasayfa" | "/cmm" | "/elektriksel_test" | "/signup";
  id: "__root__" | "/" | "/anasayfa" | "/cmm" | "/elektriksel_test" | "/signup";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AnasayfaRoute: typeof AnasayfaRoute;
  CmmRoute: typeof CmmRoute;
  Elektriksel_testRoute: typeof Elektriksel_testRoute;
  SignupRoute: typeof SignupRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/signup": {
      id: "/signup";
      path: "/signup";
      fullPath: "/signup";
      preLoaderRoute: typeof SignupRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/elektriksel_test": {
      id: "/elektriksel_test";
      path: "/elektriksel_test";
      fullPath: "/elektriksel_test";
      preLoaderRoute: typeof Elektriksel_testRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/cmm": {
      id: "/cmm";
      path: "/cmm";
      fullPath: "/cmm";
      preLoaderRoute: typeof CmmRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/anasayfa": {
      id: "/anasayfa";
      path: "/anasayfa";
      fullPath: "/anasayfa";
      preLoaderRoute: typeof AnasayfaRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnasayfaRoute: AnasayfaRoute,
  CmmRoute: CmmRoute,
  Elektriksel_testRoute: Elektriksel_testRoute,
  SignupRoute: SignupRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
